ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status)) + facet_wrap(`Fluoride Product` ~ `Water Source`,nrow=2) + labs(title="Categorical Data counts by Fluoridation") + theme_minimal()
ggplot(data=fluoride_df) + geom-bar(mapping=aex(x=Status,fill,color="Black",fill="Fluoridated"))
ggplot(data=fluoride_df) + geom_bar(mapping=aex(x=Status,fill,color="Black",fill="Fluoridated"))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill,color="Black",fill="Fluoridated"))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill="Fluoridated"))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill="Fluoridated"),color="black",position="dodge") + scale_fill_manual((values=c("Yes"="blue","No"="red")))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill=`Fluoridated`),color="black",position="dodge")
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill=`Fluoridated`),color="black",position="dodge") + scale_fill_manual((values=c("Yes"="blue","No"="red")))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill=`Fluoridated`),color="black",position="dodge") + scale_fill_manual((values=c("Yes"="blue","No"="red")))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill=`Fluoridated`),color="black",position="dodge") + scale_fill_manual(values=c("Yes"="blue","No"="red"))
ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status,fill=`Fluoridated`),color="black",position="stack") + scale_fill_manual(values=c("Yes"="blue","No"="red"))
categorical_columns <- c(`Status`,`Fluoride Product`,`Water source()`)
categorical_columns <- c(Status,Fluoride Product,Water source)
categorical_columns <- c("Status","Fluoride Product","Water source")
for x in categorical_columns:
categorical_columns <- c("Status","Fluoride Product","Water source")
for column in categorical_columns:
categorical_columns <- c("Status","Fluoride Product","Water source")
for column in categorical_columns {categorical_bar <- ggplot(data=fluoride_df) +
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill=`Fluoridated`),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="blue","No"="red")) +
labs(title = paste("Counts of Fluoridated Status by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill=`Fluoridated`),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="blue","No"="red")) +
labs(title = paste("Counts of Fluoridated Status by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="blue","No"="red")) +
labs(title = paste("Counts of Fluoridated Status by", column), x = column, y = "Count")
print(categorical_bar)}
View(distinct_pws_ids)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS ID" ="PWS_ID","PWS Name" ="PWS_Name","Population Served"="Population_Served",
"Fluoride Product" = "Fluoride_Product", "Water Source" = "Water_Source")
library(tidyverse)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS_ID"="PWS ID" ,"PWS Name" ="PWS_Name","Population Served"="Population_Served",
"Fluoride Product" = "Fluoride_Product", "Water Source" = "Water_Source")
library(tidyverse)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS_ID"="PWS ID" ,"PWS_Name"='PWS Name","Population_Served"="Population Served","Fluoride_Product"="Fluoride Product","Water_Source"= "Water Source")
#There are 1632 distinct PWS present in the state of Florida between 2019-2023
distinct_pws_ids <- fluoride_df %>% distinct(`PWS_ID`)
#Key features that can be used beyond serving as an id or location are [status,population_served,fluoride_product,fluoridated,water_source]
#It seems that all locations of pws only have primary counties and don't have association with a secondary or tertiary
library(tidyverse)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS_ID"="PWS ID" ,"PWS_Name"="PWS Name","Population_Served"="Population Served","Fluoride_Product"="Fluoride Product","Water_Source"= "Water Source")
#There are 1632 distinct PWS present in the state of Florida between 2019-2023
distinct_pws_ids <- fluoride_df %>% distinct(`PWS_ID`)
#Key features that can be used beyond serving as an id or location are [status,population_served,fluoride_product,fluoridated,water_source]
#It seems that all locations of pws only have primary counties and don't have association with a secondary or tertiary
primary_county_count <- length(fluoride_df$County)- sum(grepl("Primary",fluoride_df$County,ignore.case=TRUE))
distinct_pws_name <- fluoride_df %>% distinct(`PWS_Name`)
#look at individual categorical counts
status_value_counts <- fluoride_df %>% count(`Status`)
fluoride_product_value_counts <- fluoride_df %>% count(`Fluoride_Product`)
water_source_value_counts <- fluoride_df %>% count(`Water_Source`)
#categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride Product`,`Water Source`)
#ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status)) + facet_wrap(`Fluoride Product` ~ `Water Source`,nrow=2) + labs(title="Categorical Data counts by Fluoridation") + theme_minimal()
categorical_columns <- c("Status","Fluoride_Product","Water_Source")
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="blue","No"="red")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
categorical_columns <- c("Status","Fluoride_Product","Water_Source","Year")
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
categorical_columns <- c("Status","Fluoride_Product","Water_Source","year")
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride Product`,`Water Source`)
categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride Product`,`Water Source`)
categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride_Product`,`Water_Source`)
View(categorical_value_counts)
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df,mapping=aes_string(x=column,fill="Fluoridated")) +
geom_bar(alpha = 1/5, position = "identity") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
library(tidyverse)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS_ID"="PWS ID" ,"PWS_Name"="PWS Name","Population_Served"="Population Served","Fluoride_Product"="Fluoride Product","Water_Source"= "Water Source")
#There are 1632 distinct PWS present in the state of Florida between 2019-2023
distinct_pws_ids <- fluoride_df %>% distinct(`PWS_ID`)
#Key features that can be used beyond serving as an id or location are [status,population_served,fluoride_product,fluoridated,water_source]
#It seems that all locations of pws only have primary counties and don't have association with a secondary or tertiary
primary_county_count <- length(fluoride_df$County)- sum(grepl("Primary",fluoride_df$County,ignore.case=TRUE))
distinct_pws_name <- fluoride_df %>% distinct(`PWS_Name`)
#look at individual categorical counts
status_value_counts <- fluoride_df %>% count(`Status`)
fluoride_product_value_counts <- fluoride_df %>% count(`Fluoride_Product`)
water_source_value_counts <- fluoride_df %>% count(`Water_Source`)
#categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride Product`,`Water Source`)
#ggplot(data=fluoride_df) + geom_bar(mapping=aes(x=Status)) + facet_wrap(`Fluoride Product` ~ `Water Source`,nrow=2) + labs(title="Categorical Data counts by Fluoridation") + theme_minimal()
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
#The amount of fluoridated PWS stay consistent throughout the 5 years
#Ground water seems to be the most abundant form of water source, with majority PWS not being fluoridated, surface is marginally more noticeable in count that mixed and unknown but dwarfed by Ground count
#only natural for fluoride product has a noticeable amount of non-fluoridation with
View(fluoride_df)
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="cyan")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
library(tidyverse)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS_ID"="PWS ID" ,"PWS_Name"="PWS Name","Population_Served"="Population Served","Fluoride_Product"="Fluoride Product","Water_Source"= "Water Source")
#There are 1632 distinct PWS present in the state of Florida between 2019-2023
distinct_pws_ids <- fluoride_df %>% distinct(`PWS_ID`)
#Key features that can be used beyond serving as an id or location are [status,population_served,fluoride_product,fluoridated,water_source]
#It seems that all locations of pws only have primary counties and don't have association with a secondary or tertiary
primary_county_count <- length(fluoride_df$County)- sum(grepl("Primary",fluoride_df$County,ignore.case=TRUE))
distinct_pws_name <- fluoride_df %>% distinct(`PWS_Name`)
#look at individual categorical counts
status_value_counts <- fluoride_df %>% count(`Status`)
fluoride_product_value_counts <- fluoride_df %>% count(`Fluoride_Product`)
water_source_value_counts <- fluoride_df %>% count(`Water_Source`)
categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride Product`,`Water Source`)
library(tidyverse)
fluoride_df <- read_csv("../Clean_Data/Flouride_2019-2023.csv")
glimpse(fluoride_df)
#rename columns
fluoride_df <- fluoride_df %>% rename("PWS_ID"="PWS ID" ,"PWS_Name"="PWS Name","Population_Served"="Population Served","Fluoride_Product"="Fluoride Product","Water_Source"= "Water Source")
#There are 1632 distinct PWS present in the state of Florida between 2019-2023
distinct_pws_ids <- fluoride_df %>% distinct(`PWS_ID`)
#Key features that can be used beyond serving as an id or location are [status,population_served,fluoride_product,fluoridated,water_source]
#It seems that all locations of pws only have primary counties and don't have association with a secondary or tertiary
primary_county_count <- length(fluoride_df$County)- sum(grepl("Primary",fluoride_df$County,ignore.case=TRUE))
distinct_pws_name <- fluoride_df %>% distinct(`PWS_Name`)
#look at individual categorical counts
status_value_counts <- fluoride_df %>% count(`Status`)
fluoride_product_value_counts <- fluoride_df %>% count(`Fluoride_Product`)
water_source_value_counts <- fluoride_df %>% count(`Water_Source`)
categorical_value_counts <- fluoride_df %>% count(Status,`Fluoride_Product`,`Water_Source`)
categorical_columns= ["Status","Fluoride_Product","Water_Source"]
categorical_columns <- list("Status","Fluoride_Product","Water_Source")
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
categorical_columns <- list("Status","Fluoride_Product","Water_Source","year")
for (column in categorical_columns) {categorical_bar <- ggplot(summary_data, aes_string(x = column, y = "total", fill = "Fluoridated")) +
geom_col(color = "black", position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "cyan")) +
labs(title = paste("Sum of Values by", column), x = column, y = "Sum")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = "total", fill = "Fluoridated")) +
geom_col(color = "black", position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "cyan")) +
labs(title = paste("Sum of Values by", column), x = column, y = "Sum")
print(categorical_bar)}
View(fluoride_df)
for (column in categorical_columns) {categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = "Population_Served", fill = "Fluoridated")) +
geom_col(color = "black", position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "cyan")) +
labs(title = paste("Sum of Values by", column), x = column, y = "Sum")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = "Population_Served", fill = "Fluoridated")) +
geom_col( position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "cyan")) +
labs(title = paste("Sum of Values by", column), x = column, y = "Sum")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
print(categorical_bar)}
for (column in categorical_columns)
{categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = "Population_Served", fill = "Fluoridated")) +
geom_col( position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "cyan")) +
labs(title = paste("Sum of Values by", column), x = column, y = "Sum")
print(categorical_bar)}
for (column in categorical_columns)
{categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = "Population_Served", fill = "Fluoridated")) +
geom_col( position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "brown")) +
labs(title = paste("Sum of Values by", column), x = column, y = "Sum")
print(categorical_bar)}
per_population_served <- fluoride_df$Population_Served/1000
for (column in categorical_columns)
#create a bar chart that is stacked
{categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = per_population_served, fill = "Fluoridated")) +
geom_col( position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "brown")) +
labs(title = paste("Total Population Served by", column), x = column, y = "total")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
geom_text(aes(label = count), position = position_stack(vjust = 0.5), color = "white")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
geom_text(aes(label = n()), position = position_stack(vjust = 0.5), color = "white")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),color="black",position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
geom_text(aes(label = ..count..),stat="count", position = position_stack(vjust = 0.5), color = "white")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
geom_text(aes(label = ..count..),stat="count", position = position_stack(vjust = 0.5), color = "white")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count")
geom_text(aes(label = ..count..),stat="count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes(label = ..count..),stat="count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(stat="count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(stat="count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(stat = "count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
#initialize loop to create a plot for each categorical column
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(label = "..count.."),stat = "count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(label = "..count.."),stat = "count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = "identity", color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = "jitter", color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(stat = "count",
mapping = aes_string(x = column,
label = paste0("..count.., ifelse(Fluoridated == 'Yes', 'Yes: ', 'No: ')", column)),
position = position_stack(vjust = 0.5),
color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(stat = "count", mapping = aes_string(x = column, label = paste0("..count.., ifelse(Fluoridated == 'Yes', 'Yes: ', 'No: ')", column)),position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(stat = "count", mapping = aes_string(x = column, label = paste0("..count.., ifelse(Fluoridated == 'Yes', 'Yes: ', 'No: ')", column)),position = position_stack(vjust = 0.5), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.1), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.02), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.1), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.05), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.05), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.3), color = "black")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.05), color = "black")
print(categorical_bar)}
per_population_served <- fluoride_df$Population_Served/1000
for (column in categorical_columns)
#create a bar chart that is stacked
{categorical_bar <- ggplot(fluoride_df, aes_string(x = column, y = per_population_served, fill = "Fluoridated")) +
geom_col( position = "stack") +
scale_fill_manual(values = c("Yes" = "grey", "No" = "brown")) +
labs(title = paste("Total Population Served by", column), x = column, y = "total per 1000 Persons")
print(categorical_bar)}
for (column in categorical_columns) {categorical_bar <- ggplot(data=fluoride_df) +
#create a bar chart that is stacked, where count is the operation is used
geom_bar(mapping=aes_string(x=column,fill="Fluoridated"),position="stack") +
# Have the binary column associated with specific colors
scale_fill_manual(values=c("Yes"="grey","No"="maroon")) +
#create labels for each plot
labs(title = paste("Counts of Fluoridated by", column), x = column, y = "Count") +
#create text to express total_count for that category
geom_text(aes_string(x = column,label = "..count.."),stat = "count", position = position_stack(vjust = 1.05), color = "black")
print(categorical_bar)}
